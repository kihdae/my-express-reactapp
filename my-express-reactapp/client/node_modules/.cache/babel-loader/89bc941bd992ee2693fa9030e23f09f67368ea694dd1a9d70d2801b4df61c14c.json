{"ast":null,"code":"var _jsxFileName = \"/Users/miloa/Documents/sandbox/mexra/my-express-reactapp/client/src/journalForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JournalEntryForm = ({\n  onSubmit,\n  userId\n}) => {\n  _s();\n  const [newJournalEntry, setNewJournalEntry] = useState('');\n  const handleJournalEntryChange = event => {\n    setNewJournalEntry(event.target.value);\n  };\n  const handleAddJournalEntry = async () => {\n    const url = 'http://localhost:3000/api/journal';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: newJournalEntry,\n          userId\n        })\n      });\n      const data = await response.json();\n      console.log('] entry added:', data);\n      setNewJournalEntry('');\n\n      //  passed down onSubmit function \n      if (onSubmit) {\n        onSubmit(data);\n      }\n    } catch (error) {\n      console.error('Error adding journal entry:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"journal-entry-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Journal entry\",\n      value: newJournalEntry,\n      onChange: handleJournalEntryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddJournalEntry,\n      children: \"Add Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(JournalEntryForm, \"hFZ2DqDTHabpu5oa8iiawF1BfOs=\");\n_c = JournalEntryForm;\nexport default JournalEntryForm;\nvar _c;\n$RefreshReg$(_c, \"JournalEntryForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","JournalEntryForm","onSubmit","userId","_s","newJournalEntry","setNewJournalEntry","handleJournalEntryChange","event","target","value","handleAddJournalEntry","url","response","fetch","method","headers","body","JSON","stringify","content","data","json","console","log","error","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/miloa/Documents/sandbox/mexra/my-express-reactapp/client/src/journalForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst JournalEntryForm = ({ onSubmit, userId }) => {\n  const [newJournalEntry, setNewJournalEntry] = useState('');\n\n  const handleJournalEntryChange = (event) => {\n    setNewJournalEntry(event.target.value);\n  };\n\n  const handleAddJournalEntry = async () => {\n    const url = 'http://localhost:3000/api/journal'; \n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ content: newJournalEntry, userId }),\n      });\n\n      const data = await response.json();\n      console.log('] entry added:', data);\n\n      setNewJournalEntry('');\n\n      //  passed down onSubmit function \n      if (onSubmit) {\n        onSubmit(data); \n      }\n    } catch (error) {\n      console.error('Error adding journal entry:', error);\n    }\n  };\n\n  return (\n    <div className=\"journal-entry-form\">\n      <textarea\n        placeholder=\"Journal entry\"\n        value={newJournalEntry}\n        onChange={handleJournalEntryChange}\n      />\n      <button onClick={handleAddJournalEntry}>Add Entry</button>\n    </div>\n  );\n};\n\nexport default JournalEntryForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMS,wBAAwB,GAAIC,KAAK,IAAK;IAC1CF,kBAAkB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACxC,CAAC;EAED,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,MAAMC,GAAG,GAAG,mCAAmC;IAE/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAChCG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEf,eAAe;UAAEF;QAAO,CAAC;MAC3D,CAAC,CAAC;MAEF,MAAMkB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,IAAI,CAAC;MAEnCf,kBAAkB,CAAC,EAAE,CAAC;;MAEtB;MACA,IAAIJ,QAAQ,EAAE;QACZA,QAAQ,CAACmB,IAAI,CAAC;MAChB;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC3B,OAAA;MACE4B,WAAW,EAAC,eAAe;MAC3BlB,KAAK,EAAEL,eAAgB;MACvBwB,QAAQ,EAAEtB;IAAyB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFjC,OAAA;MAAQkC,OAAO,EAAEvB,qBAAsB;MAAAgB,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA3CIH,gBAAgB;AAAAkC,EAAA,GAAhBlC,gBAAgB;AA6CtB,eAAeA,gBAAgB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}